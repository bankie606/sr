@inproceedings{randomizedaccuracy,
  author = "Zeyuan Allen Zhu and Sasa Misailovic and Jonathan A. Kelner and Martin Rinard",
  title = "Randomized Accuracy-Aware Program Transformations For Efficient Approximate Computations",
  booktitle = "Symposium on Principles of Programming Languages",
  year = 2012,
  volume = 39,
  organization = "ACM",
}

@inproceedings{dynamicknobs,
  author = "Henry Hoffmann and Stelios Sidiroglou and Michael Carbin and Sasa Misailovic and Anant Agarwal and Martin Rinard",
  title = "Dynamic Knobs for Responsive Power-Aware Computation",
  booktitle = "International Conference on Architectural Support for Programming Languages and Operating Systems",
  year = 2011,
  volume = 16,
}

@inproceedings{discardtasks,
  author = "Martin C. Rinard",
  title = "Probabilistic Accuracy Bounds for Fault-Tolerant Computations That Discard Tasks",
  booktitle = "International Conference on Supercomputing ",
  year = 2006,
  volume = 20,
  organization = "ACM",
}

@techreport{Condie:EECS-2009-136,
    Author = {Condie, Tyson and Conway, Neil and Alvaro, Peter and Hellerstein, Joseph M. and Elmeleegy, Khaled and Sears, Russell},
    Title = {MapReduce Online},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2009},
    Month = {Oct},
    URL = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-136.html},
    Number = {UCB/EECS-2009-136},
    Abstract = {MapReduce is a popular framework for data-intensive distributed computing of batch jobs. To simplify fault tolerance, the output of each MapReduce task and job is materialized to disk before it is consumed. In this paper, we propose a modified MapReduce architecture that allows data to be pipelined between operators. This extends the MapReduce programming model beyond batch processing, and can reduce completion times and improve system utilization for batch jobs as well.  We present a modified version of the Hadoop MapReduce framework that supports online aggregation, which allows users to see "early returns" from a job as it is being computed. Our Hadoop Online Prototype (HOP) also supports continuous queries, which enable MapReduce programs to be written for applications such as event monitoring and stream processing. HOP retains the fault tolerance properties of Hadoop, and can run unmodified user-defined MapReduce programs.}
}

